######################
#  General Settings  #
######################

set -g default-terminal "tmux-256color"

# Undercurl support (+ colors). For this to work, the terminal must also support it. To check, run: printf '\e[4:3mUndecurl\n'
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # + color

set -g history-limit 104200

# (Neo)vim compatibility
set -sg escape-time 0
set-option -g focus-events on

# Activity bell and whistles
set -g visual-activity on

# Amount of time status messages are shown for
set -g display-time 1500

# Allow multiple commands to be entered with a single Prefix press
set-option -g repeat-time 500

setw -g automatic-rename on
setw -g aggressive-resize on
set -g status-interval 5

# Use Emacs bindings for the tmux command prompt
set -g status-keys emacs

# Use C-Space as prefix
unbind-key C-b
set-option -g prefix C-space

# Automatically renumber windows
set -g renumber-windows on

# Start numbering windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse on

##################
#  Key Bindings  #
##################

# Unbind keys we're going to override
unbind %    # split-window -h
unbind '"'  # split-window
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left


# Edit configuration file and reloadd tmux
bind-key e neww -n 'conf' 'nvim ~/.config/tmux/tmux.conf && tmux source-file ~/.config/tmux/tmux.conf && tmux display "Configuration updated"'

# Reload configuration file
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "Configuration reloaded"

# New window (opens in $pwd)
bind-key c new-window -c "#{pane_current_path}"

# Floating window toggle (credits to https://github.com/mrjones2014)
bind -n M-o if-shell "[[ $(tmux display-message -p '#S') = scratch-* ]]" { detach-client } { run-shell "tmux display-popup -w 90% -h 90% -d '#{pane_current_path}' -E 'tmux attach -t \'scratch-#{pane_id}\' || tmux new-session -A -s \'scratch-#{pane_id}\' \;'" }

# Next/previous window
bind-key n next-window
bind-key p previous-window

# Goto last window
bind-key C-space last-window

# Split windows
bind-key '\' split-window -fh -c "#{pane_current_path}"
bind-key - split-window -fv -c "#{pane_current_path}"

# Split panes
bind-key | split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# Moving between panes
bind-key M-h select-pane -L
bind-key M-l select-pane -R
bind-key M-k select-pane -U
bind-key M-j select-pane -D

bind-key h select-pane -L
bind-key l select-pane -R
bind-key k select-pane -U
bind-key j select-pane -D

# Switch to marked pane
bind \` switch-client -t'{marked}'

# Swap pane with @1
# When in a split, the biggest pane is always '@1'.
bind @ if '[ #{pane_index} -eq 1 ]' \
     'swap-pane -s "!"' \
     'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

bind-key C-o rotate-window

# Resizing panes
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# Moving windows
bind-key > swap-window -t +
bind-key < swap-window -t -

# Swap windows/panes interactively
bind-key C-w choose-tree -Zw "swap-window -t '%%'"
bind-key C-p choose-tree -Zw "swap-pane -t '%%'"
bind-key C-j choose-tree 'join-pane -h -s "%%"'

# Join panes
bind-key C-j choose-tree 'join-pane -h -s "%%"'

bind-key C-o rotate-window

# Detach from session
bind-key d detach

#################################
#  Monitor window for activity  #
#################################
bind-key M setw monitor-activity \; display-message '[#{?monitor-activity,Start,Stop}] monitoring for window activity'

bind-key C-l pipe-pane -o "cat >> ~/tmux-#W-%Y%m%d.log" \; display "Logging command output to ~/tmux-#W-%Y%m%d.log"

#############################
#  Copy mode and clipboard  #
#############################

# Use Escape to enter copy mode
bind-key Escape copy-mode

# Use vi bindings in copy mode
setw -g mode-keys vi

# Paste from the top buffer
bind-key P paste-buffer

# Scroll by 2 lines instead of 5 when using the mouse
bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down

# Set the current tmux version (use this variable on if-shell commands)
run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# Use 'v' for visual selection
# Use 'V' to select the whole line
# Use 'C-v' for visual block mode (hit 'v' then 'C-v' to trigger it)
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Fix navigation when using Vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n 'M-\' if-shell "$is_vim" "send-keys 'M-\\'" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

# Requires https://github.com/ThePrimeagen/harpoon
bind-key N run-shell "~/.local/share/nvim/site/pack/packer/opt/harpoon/scripts/tmux/switch-back-to-nvim"

bind-key F send-keys "tmux-fzf" Enter

###############
#  Statusbar  #
###############
set-option -g status-style "bg=#1d2021,fg=#d4be98,bold,italics"
set -g status-left-length 20
set-option -g status-justify centre
set-option -g status-interval 60
set-option -g status-left "ยง #S"
set-option -g status-right "$USER@#h %H:%M"
set-option -w -g window-status-current-style "fg=#a9b665"

#############
#  Plugins  #
#############
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'

# Using 'copy-pipe' allows for copying text without canceling copy mode. The default action is 'copy-pipe-and-cancel'
set -g @yank_action 'copy-pipe'

# Automatically install tmux plugins, as noted in
# https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

run -b '~/.config/tmux/plugins/tpm/tpm'
